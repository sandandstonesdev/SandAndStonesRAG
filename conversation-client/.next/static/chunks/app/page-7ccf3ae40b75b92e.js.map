{"version":3,"file":"static/chunks/app/page-7ccf3ae40b75b92e.js","mappings":"8JAKe,SAASA,IACpB,GAAM,CAACC,EAAYC,EAAc,CAAGC,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,CAA+B,MACrE,CAACC,EAAUC,EAAY,CAAGF,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,CAAsC,EAAE,EAC1E,CAACG,EAAOC,EAAS,CAAGJ,CAAAA,EAAAA,EAAAA,QAAAA,CAAQA,CAAC,IAGnCK,CAAAA,EAAAA,EAAAA,SAAAA,CAASA,CAAC,KACN,IAAMC,EAAgB,IAAIC,EAAAA,CAA4B,GACjDC,gBAAgB,CAACD,EAAAA,CAAgB,CAACE,KAAK,EACvCC,OAAO,CAAC,iCACRC,sBAAsB,GACtBC,KAAK,GAaV,OAXAN,EAAcO,KAAK,GACdC,IAAI,CAAC,KACFC,QAAQC,GAAG,CAAC,qBACZjB,EAAcO,GAEdA,EAAcW,EAAE,CAAC,iBAAkB,CAACC,EAAcC,KAC9CjB,EAAY,GAAU,IAAIkB,EAAM,MAAEF,UAAMC,CAAQ,EAAE,CACtD,EACJ,GACCE,KAAK,CAAC,GAASN,QAAQO,KAAK,CAAC,4BAA6BC,IAExD,KACHjB,EAAckB,IAAI,EACtB,CACJ,EAAG,EAAE,EAEL,IAAMC,EAAc,UAChB,GAAI3B,GAAcK,EAAMuB,IAAI,GACxB,CAD4B,EACxB,CACA,MAAM5B,EAAW6B,MAAM,CAAC,cA5BvB,CA4BsCT,MAAMf,GAC7CC,EAAS,GACb,CAAE,MAAOmB,EAAK,CACVR,QAAQO,KAAK,CAAC,yBAA0BC,EAC5C,CAER,EAEA,MACI,WAACK,MAAAA,CAAIC,UAAU,kEACX,UAACC,KAAAA,CAAGD,UAAU,+CAAsC,sBACpD,UAACD,MAAAA,CAAIC,UAAU,oFACV5B,EAAS8B,GAAG,CAAC,CAACC,EAAKC,IAChB,WAACL,MAAAA,CAEGC,UAAW,QACN,OAD2B,YAAbG,EAAId,IAAI,CAAiB,2BAA6B,qCAGzE,WAACgB,SAAAA,WAAQF,EAAId,IAAI,CAAC,OAAU,IAAEc,EAAIb,OAAO,GAJpCc,MAQjB,WAACL,MAAAA,CAAIC,UAAU,oCACX,UAAC1B,QAAAA,CACGgC,KAAK,OACLN,UAAU,mGACVO,YAAY,uBACZC,MAAOlC,EACPmC,SAAU,GAAOlC,EAASmC,EAAEC,MAAM,CAACH,KAAK,IAE5C,UAACI,SAAAA,CACGZ,UAAU,oHACVa,QAASjB,WACZ,cAMjB,kBC5EA,sCAA4L","sources":["webpack://_N_E/./src/app/components/Chatbot.tsx","webpack://_N_E/?fe83"],"sourcesContent":["'use client';\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport * as signalR from '@microsoft/signalr';\r\n\r\nexport default function Chatbot() {\r\n    const [connection, setConnection] = useState<signalR.HubConnection | null>(null);\r\n    const [messages, setMessages] = useState<{ user: string; message: string }[]>([]);\r\n    const [input, setInput] = useState('');\r\n    const user = \"User\"\r\n    \r\n    useEffect(() => {\r\n        const newConnection = new signalR.HubConnectionBuilder()\r\n            .configureLogging(signalR.LogLevel.Debug)\r\n            .withUrl('http://localhost:5012/chatHub')\r\n            .withAutomaticReconnect()\r\n            .build();\r\n\r\n        newConnection.start()\r\n            .then(() => {\r\n                console.log('SignalR connected');\r\n                setConnection(newConnection);\r\n\r\n                newConnection.on('ReceiveMessage', (user: string, message: string) => {\r\n                    setMessages((prev) => [...prev, { user, message }]);\r\n                });\r\n            })\r\n            .catch((err) => console.error('SignalR connection error:', err));\r\n\r\n        return () => {\r\n            newConnection.stop();\r\n        };\r\n    }, []);\r\n\r\n    const sendMessage = async () => {\r\n        if (connection && input.trim()) {\r\n            try {\r\n                await connection.invoke('SendMessage', user, input);\r\n                setInput('');\r\n            } catch (err) {\r\n                console.error('Error sending message:', err);\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div className=\"max-w-lg mx-auto p-4 bg-gray-100 rounded-lg shadow-md\">\r\n            <h1 className=\"text-2xl font-bold text-center mb-4\">Chat with Chatbot</h1>\r\n            <div className=\"h-64 overflow-y-auto bg-white p-4 rounded-lg border border-gray-300 mb-4\">\r\n                {messages.map((msg, index) => (\r\n                    <div\r\n                        key={index}\r\n                        className={`mb-2 ${msg.user === 'Chatbot' ? 'text-blue-600 text-right' : 'text-gray-800 text-left'\r\n                            }`}\r\n                    >\r\n                        <strong>{msg.user}:</strong> {msg.message}\r\n                    </div>\r\n                ))}\r\n            </div>\r\n            <div className=\"flex items-center gap-2\">\r\n                <input\r\n                    type=\"text\"\r\n                    className=\"flex-1 p-2 border border-gray-300 rounded-lg focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    placeholder=\"Type your message...\"\r\n                    value={input}\r\n                    onChange={(e) => setInput(e.target.value)}\r\n                />\r\n                <button\r\n                    className=\"px-4 py-2 bg-blue-500 text-white rounded-lg hover:bg-blue-600 focus:outline-none focus:ring-2 focus:ring-blue-500\"\r\n                    onClick={sendMessage}\r\n                >\r\n                    Send\r\n                </button>\r\n            </div>\r\n        </div>\r\n    );\r\n};","import(/* webpackMode: \"eager\", webpackExports: [\"default\"] */ \"C:\\\\Repo\\\\SandAndStonesProject\\\\SandAndStonesRAG\\\\SandAndStonesRAG\\\\conversation-client\\\\src\\\\app\\\\components\\\\Chatbot.tsx\");\n"],"names":["Chatbot","connection","setConnection","useState","messages","setMessages","input","setInput","useEffect","newConnection","signalR","configureLogging","Debug","withUrl","withAutomaticReconnect","build","start","then","console","log","on","user","message","prev","catch","error","err","stop","sendMessage","trim","invoke","div","className","h1","map","msg","index","strong","type","placeholder","value","onChange","e","target","button","onClick"],"sourceRoot":"","ignoreList":[]}